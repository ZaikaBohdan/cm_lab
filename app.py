import streamlit as st

import numpy as np
import pandas as pd

from cm_func import *

st.set_page_config(
    page_title='–ö–æ–≥–Ω—ñ—Ç–∏–≤–Ω–µ –º–æ–¥–µ–ª—é–≤–∞–Ω–Ω—è',
    page_icon='üéì',
    layout='wide'
)

# to remove +/- from number input widgets
st.markdown("""
    <style>
        button.step-up {display: none;}
        button.step-down {display: none;}
        div[data-baseweb] {border-radius: 4px;}
    </style>""",
    unsafe_allow_html=True
)

st.write("# –ö–æ–≥–Ω—ñ—Ç–∏–≤–Ω–µ –º–æ–¥–µ–ª—é–≤–∞–Ω–Ω—è")

with st.sidebar.header('1. –í–∏–±–µ—Ä—ñ—Ç—å .xlsx —Ñ–∞–π–ª'):
    uploaded_file = st.sidebar.file_uploader("–í–∏–±–µ—Ä—ñ—Ç—å .xlsx —Ñ–∞–π–ª –∑ –∫–æ–≥–Ω—ñ—Ç–∏–≤–Ω–æ—é –∫–∞—Ä—Ç–æ—é", type=["xlsx"])
    st.sidebar.markdown("""
        [–ü—Ä–∏–∫–ª–∞–¥ –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª—É](https://github.com/ZaikaBohdan/datasetsforlabs/blob/main/sa_lab6_raw_input.xlsx?raw=true)
    """)

if uploaded_file is not None:
    # >>>>>>>>>>>>>>>>>>>>>>>>>>>>>> –ö–æ–≥–Ω—ñ—Ç–∏–≤–Ω–∞ –∫–∞—Ä—Ç–∞ <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    st.write("## –ö–æ–≥–Ω—ñ—Ç–∏–≤–Ω–∞ –∫–∞—Ä—Ç–∞")
    
    c1, c2 = st.columns(2) 

    cogn_map = pd.read_excel(uploaded_file, index_col=0)

    c1.write("### –ú–∞—Ç—Ä–∏—Ü—è")
    c1.dataframe(cogn_map)

    c1.write("### –ì—Ä–∞—Ñ")
    graph = build_graph(cogn_map, c1)

    c2.write("### –°—Ç—ñ–π–∫—ñ—Å—Ç—å")

    stab_vals = [
        check_perturbation_stability(cogn_map), 
        check_numerical_stability(cogn_map), 
        check_structural_stability(cogn_map, graph)
        ]
    stab_df = pd.DataFrame(
        [yes_no(val) for val in stab_vals], 
        index = ['–ó–∞ –∑–±—É—Ä–µ–Ω–Ω—è–º', '–ß–∏—Å–µ–ª—å–Ω–∞', '–°—Ç—Ä—É–∫—Ç—É—Ä–Ω–∞'],
        columns=['–¢–∞–∫/–ù—ñ']
        )

    c2.dataframe(stab_df.T)

    eigvals_list = [str(val).strip('()').replace('j', 'i') for val in eigvals(cogn_map)]
    
    c2.write(f"### –í–ª–∞—Å–Ω—ñ —á–∏—Å–ª–∞ (max|Œª| = {get_spectral_radius(cogn_map): .2f})")
    c2.dataframe(pd.Series(eigvals_list, name='–í–ª–∞—Å–Ω—ñ —á–∏—Å–ª–∞'), height=205)

    c2.write(f"### –ü–∞—Ä–Ω—ñ —Ü–∏–∫–ª–∏")
    if stab_vals[2]:
        c2.write('–í—ñ–¥—Å—É—Ç–Ω—ñ')
    else:
        c2.dataframe(find_even_cycles(cogn_map, graph)[0], height=205)

    
    # >>>>>>>>>>>>>>>>>>>>>>>>>>>>>> –Ü–º–ø—É–ª—å—Å–∏–≤–Ω–µ –º–æ–¥–µ–ª—é–≤–∞–Ω–Ω—è <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    with st.sidebar.header('2. –ü–∞—Ä–∞–º–µ—Ç—Ä–∏ —ñ–º–ø—É–ª—å—Å–Ω–æ–≥–æ –º–æ–¥–µ–ª—é–≤–∞–Ω–Ω—è'):
        st.sidebar.markdown("#### 2.1. –ü–æ—á–∞—Ç–∫–æ–≤–∏–π —Å—Ç–∞–Ω")
        V = np.zeros(cogn_map.shape[0])
        v_cols = st.sidebar.columns(2)
        st.sidebar.markdown("#### 2.2. –ü–æ—á–∞—Ç–∫–æ–≤–∏–π —ñ–º–ø—É–ª—å—Å")
        P = np.zeros(cogn_map.shape[0])
        p_cols = st.sidebar.columns(2)
        t = st.sidebar.number_input('–ö—ñ–ª—å–∫—ñ—Å—Ç—å —ñ—Ç–µ—Ä–∞—Ü—ñ–π', min_value=1, value=5)
        for i in range(cogn_map.shape[0]):
            V[i] = v_cols[i%2].number_input(f'v{i+1}', min_value=-1.0, max_value=1.0, value=0.0)
            P[i] = p_cols[i%2].number_input(f'p{i+1}', min_value=-1.0, max_value=1.0, value=0.0)
        imp_mod_button = st.sidebar.button('–í–∏–∫–æ–Ω–∞—Ç–∏')

    if imp_mod_button:
        st.write("## –Ü–º–ø—É–ª—å—Å–Ω–µ –º–æ–¥–µ–ª—é–≤–∞–Ω–Ω—è")
        impulse_model(t, V, P, cogn_map)

else:
    st.info('–í–∏–±–µ—Ä—ñ—Ç—å .xlsx —Ñ–∞–π–ª –∑ –≤—Ö—ñ–¥–Ω–∏–º–∏ –¥–∞–Ω–∏–º–∏ —É –±–æ–∫–æ–≤–æ–º—É –≤—ñ–∫–Ω—ñ –∑–ª—ñ–≤–∞.')